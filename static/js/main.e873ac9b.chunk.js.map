{"version":3,"sources":["Loader/Loader.js","SortIcon/SortIcon.js","Table/Table.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","SortIcon","sort","Table","data","onSort","sortField","onRowSelect","onClick","bind","role","map","item","data-bs-toggle","data-bs-target","id","firstName","lastName","email","phone","Modal","person","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","address","description","type","data-bs-dismiss","App","useState","isLoading","setLoading","isData","setData","isSort","setSort","isSortField","setSortField","isRow","setIsRow","isDisplayData","setDisplayData","isPageCount","setPageCount","useEffect","a","fetch","response","json","fetchMyAPI","then","filteredData","_","orderBy","displayedData","chunk","pageCount","length","row","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e873ac9b.chunk.js","sourcesContent":["import './Loader.css'\r\n\r\nfunction Loader() {\r\n\r\n    return (\r\n        <div className=\"lds-grid\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","function SortIcon ({sort}) {\r\n\r\n    return (\r\n            sort === 'asc'\r\n            ? <i className=\"bi bi-sort-down-alt\"/>\r\n            : <i className=\"bi bi-sort-up-alt\"/>\r\n    )\r\n}\r\n\r\nexport default SortIcon;","import SortIcon from \"../SortIcon/SortIcon\";\r\n\r\nfunction Table ({data, onSort, sort, sortField, onRowSelect}) {\r\n\r\n    return (\r\n        <table className=\"table table-striped table-hover\">\r\n            <thead className=\"table-primary\">\r\n            <tr>\r\n                <th onClick={onSort.bind(null,'id')} role=\"button\" >\r\n                    ID {sortField === 'id' && <SortIcon sort={sort}/>}\r\n                </th>\r\n                <th onClick={onSort.bind(null,'firstName')} role=\"button\">\r\n                    First Name {sortField === 'firstName' && <SortIcon sort={sort}/>}\r\n                </th>\r\n                <th onClick={onSort.bind(null,'lastName')} role=\"button\">\r\n                    Last Name {sortField === 'lastName' && <SortIcon sort={sort}/>}\r\n                </th>\r\n                <th onClick={onSort.bind(null,'email')} role=\"button\">\r\n                    E-mail {sortField === 'email' && <SortIcon sort={sort}/>}\r\n                </th>\r\n                <th onClick={onSort.bind(null,'phone')} role=\"button\">\r\n                    Phone {sortField === 'phone' && <SortIcon sort={sort}/>}\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            { data.map(item =>(\r\n                <tr key={item.id + item.phone} onClick={onRowSelect.bind(null, item)} data-bs-toggle=\"modal\" data-bs-target=\"#modal\">\r\n                    <td>{item.id}</td>\r\n                    <td>{item.firstName}</td>\r\n                    <td>{item.lastName}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>{item.phone}</td>\r\n\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;","function Modal({person}) {\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"modal\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex=\"-1\"\r\n             aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"staticBackdropLabel\">\r\n                            {person.id + ' ' + person.firstName + ' ' + person.lastName}\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div><span className='font-weight-bold'>E-mail: </span>{person.email}</div>\r\n                        <div><span className='font-weight-bold'>Phone: </span>{person.phone}</div>\r\n                        <div><span className='font-weight-bold'>Address: </span>{person.address}</div>\r\n                        <div><span className='font-weight-bold'>Description: </span>{person.description}</div>\r\n                        <div className=\"modal-footer justify-content-center\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import _ from 'lodash';\nimport ReactPaginate from 'react-paginate';\nimport {useEffect, useState} from 'react';\nimport Loader from \"./Loader/Loader\";\nimport Table from \"./Table/Table\";\nimport Modal from \"./Modal/Modal\";\n\nfunction App() {\n\n    const [isLoading, setLoading] = useState(true);\n    const [isData, setData] = useState([]);\n    const [isSort, setSort] = useState('asc');\n    const [isSortField, setSortField] = useState('id');\n    const [isRow, setIsRow] = useState({});\n    const [isDisplayData, setDisplayData] = useState([]);\n    const [isPageCount, setPageCount] = useState(0);\n    const pageSize = 50;\n\n    function sortTableFields(sortField) {\n        const sort = isSort === 'asc' ? 'desc' : 'asc';\n        const data = _.orderBy(isDisplayData, sortField, sort);\n        setDisplayData(data);\n        setSort(sort);\n        setSortField(sortField);\n    }\n\n    function rowSelect(row) {\n        setIsRow(row);\n    }\n\n    function pageChangeHandler({selected}) {\n        setDisplayData(_.chunk(isData, pageSize)[selected]);\n    }\n\n    useEffect(() => {\n        async function fetchMyAPI() {\n            const response = await fetch(` https://www.filltext.com/?rows=500&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={streetAddress}&description={lorem|32}`)\n            return await response.json();\n        }\n\n        fetchMyAPI()\n            .then((data) => {\n                const filteredData = _.orderBy(data, isSortField, isSort);\n                const displayedData = _.chunk(filteredData, pageSize)[0];\n                const pageCount = filteredData.length/ pageSize;\n                setData(filteredData);\n                setDisplayData(displayedData);\n                setPageCount(pageCount);\n            })\n            .then(()=>{\n\n                setLoading(false);\n            })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className=\"container min-vh-100 d-flex flex-column justify-content-center align-items-center\">\n            <Modal person={isRow}/>\n            {isLoading\n                ? <Loader/>\n                : <>\n                    <Table\n                        data={isDisplayData}\n                        onSort={sortTableFields}\n                        sort={isSort}\n                        sortField={isSortField}\n                        onRowSelect={rowSelect}\n                    />\n                    <ReactPaginate\n                        previousLabel={'<'}\n                        nextLabel={'>'}\n                        breakLabel={'...'}\n                        breakClassName={'break-me'}\n                        pageCount={isPageCount}\n                        marginPagesDisplayed={5}\n                        pageRangeDisplayed={5}\n                        onPageChange={pageChangeHandler}\n                        containerClassName={'pagination'}\n                        activeClassName={'active'}\n                        pageClassName=\"page-item\"\n                        pageLinkClassName=\"page-link\"\n                        previousClassName=\"page-item\"\n                        nextClassName=\"page-item\"\n                        previousLinkClassName=\"page-link\"\n                        nextLinkClassName=\"page-link\"\n                    />\n                </>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}